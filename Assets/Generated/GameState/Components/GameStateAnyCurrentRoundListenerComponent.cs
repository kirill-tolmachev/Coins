//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public AnyCurrentRoundListenerComponent anyCurrentRoundListener { get { return (AnyCurrentRoundListenerComponent)GetComponent(GameStateComponentsLookup.AnyCurrentRoundListener); } }
    public bool hasAnyCurrentRoundListener { get { return HasComponent(GameStateComponentsLookup.AnyCurrentRoundListener); } }

    public void AddAnyCurrentRoundListener(System.Collections.Generic.List<IAnyCurrentRoundListener> newValue) {
        var index = GameStateComponentsLookup.AnyCurrentRoundListener;
        var component = (AnyCurrentRoundListenerComponent)CreateComponent(index, typeof(AnyCurrentRoundListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyCurrentRoundListener(System.Collections.Generic.List<IAnyCurrentRoundListener> newValue) {
        var index = GameStateComponentsLookup.AnyCurrentRoundListener;
        var component = (AnyCurrentRoundListenerComponent)CreateComponent(index, typeof(AnyCurrentRoundListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyCurrentRoundListener() {
        RemoveComponent(GameStateComponentsLookup.AnyCurrentRoundListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameStateMatcher {

    static Entitas.IMatcher<GameStateEntity> _matcherAnyCurrentRoundListener;

    public static Entitas.IMatcher<GameStateEntity> AnyCurrentRoundListener {
        get {
            if (_matcherAnyCurrentRoundListener == null) {
                var matcher = (Entitas.Matcher<GameStateEntity>)Entitas.Matcher<GameStateEntity>.AllOf(GameStateComponentsLookup.AnyCurrentRoundListener);
                matcher.componentNames = GameStateComponentsLookup.componentNames;
                _matcherAnyCurrentRoundListener = matcher;
            }

            return _matcherAnyCurrentRoundListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public void AddAnyCurrentRoundListener(IAnyCurrentRoundListener value) {
        var listeners = hasAnyCurrentRoundListener
            ? anyCurrentRoundListener.value
            : new System.Collections.Generic.List<IAnyCurrentRoundListener>();
        listeners.Add(value);
        ReplaceAnyCurrentRoundListener(listeners);
    }

    public void RemoveAnyCurrentRoundListener(IAnyCurrentRoundListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyCurrentRoundListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyCurrentRoundListener();
        } else {
            ReplaceAnyCurrentRoundListener(listeners);
        }
    }
}
