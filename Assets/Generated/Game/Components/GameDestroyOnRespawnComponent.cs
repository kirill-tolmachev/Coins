//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.DestroyOnRespawnComponent destroyOnRespawn { get { return (Components.DestroyOnRespawnComponent)GetComponent(GameComponentsLookup.DestroyOnRespawn); } }
    public bool hasDestroyOnRespawn { get { return HasComponent(GameComponentsLookup.DestroyOnRespawn); } }

    public void AddDestroyOnRespawn(int newRound) {
        var index = GameComponentsLookup.DestroyOnRespawn;
        var component = (Components.DestroyOnRespawnComponent)CreateComponent(index, typeof(Components.DestroyOnRespawnComponent));
        component.Round = newRound;
        AddComponent(index, component);
    }

    public void ReplaceDestroyOnRespawn(int newRound) {
        var index = GameComponentsLookup.DestroyOnRespawn;
        var component = (Components.DestroyOnRespawnComponent)CreateComponent(index, typeof(Components.DestroyOnRespawnComponent));
        component.Round = newRound;
        ReplaceComponent(index, component);
    }

    public void RemoveDestroyOnRespawn() {
        RemoveComponent(GameComponentsLookup.DestroyOnRespawn);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDestroyOnRespawn;

    public static Entitas.IMatcher<GameEntity> DestroyOnRespawn {
        get {
            if (_matcherDestroyOnRespawn == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DestroyOnRespawn);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDestroyOnRespawn = matcher;
            }

            return _matcherDestroyOnRespawn;
        }
    }
}
